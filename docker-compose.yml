version: '3.5'
services:
  postgres:
    container_name: postgres
    image: postgres:15-alpine
    networks:
      - dev-network
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: "${POSTGRES_DB_PREFIX}_${POSTGRES_DB_NAME}"
      PG_DATA: /var/lib/postgresql/data
    ports:
      - ${POSTGRES_DB_PORT}:${POSTGRES_DB_PORT}
    volumes:
      - ./pgdata/data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  pgadmin:
    links:
      - postgres:postgres
    container_name: pgadmin
    image: dpage/pgadmin4
    depends_on:
      - postgres
    volumes:
      - ./pgdata/pgadmin:/root/.pgadmin
    env_file:
      - .env
    networks:
      - dev-network
    ports:
      - 5050:80
  server-production:
    build:
      context: ./
      target: server-production
    ports:
      - 8080:3000
    environment:
      NODE_ENV: production
  run-server:
    container_name: "c8-48_api_${NODE_ENV}"
    environment:
      - NODE_ENV:${NODE_ENV}
    env_file:
      - .env
    build:
      context: ./
      target: run-server
    ports:
      - 8080:3000
    networks:
      - dev-network
    depends_on:
      - postgres
    volumes:
      - ./server:/server
    command: yarn start:dev
    restart: unless-stopped
  run-client:
    container_name: "c8-48_client_${NODE_ENV}"
    environment:
      - NODE_ENV:${NODE_ENV}
    env_file:
      - .env
    build:
      context: ./
      target: run-client
    ports:
      - 3000:3000
    networks:
      - dev-network
    # depends_on:
    #   - run-server
    volumes:
      - ./client:/client
    command: yarn dev --host --port 3000
    restart: unless-stopped
networks:
  dev-network:
    ipam:
      config:
      - subnet: 172.33.0.0/16
  services:
    name: ${DATABASE_NETWORK:-c8-48}
  default:
    ipam:
      config:
      - subnet: 172.32.0.0/18
