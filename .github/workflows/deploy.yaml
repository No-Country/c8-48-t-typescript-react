name: Deploy-AWS
on:
  push:
    branches: [feat/deploy-backend]
  paths-ignore:
      - 'server/node_modules/**'
      - 'client/node_modules/**'
jobs:
  server:
    name: AWS
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
          cache-dependency-path: |
            ./server/yarn.lock
            ./client/yarn.lock

      - name: Install package - client
        working-directory: ./client
        run: yarn install --frozen-lockfile
      - name: build - client
        working-directory: ./client
        env:
          NODE_ENV: production
        run: yarn build

        
      - name: Install package - server
        working-directory: ./server
        run: yarn install --frozen-lockfile      
      - name: build - server
        working-directory: ./server
        env:
          NODE_ENV: production
        run: yarn build


      - name: deployment - serve
        uses: burnett01/rsync-deployments@5.1
        with:
          switches: -avzr --delete
          path: ./server/*
          remote_path: /var/www/my-app/
          remote_host: ec2-44-210-155-80.compute-1.amazonaws.com
          remote_user: ubuntu
          remote_key: "${{ secrets.SSH_PRIVATE_KEY }}"

      - name: deployment - client
        uses: burnett01/rsync-deployments@5.1
        with:
          switches: -avzr --delete
          path: ./client/build/*
          remote_path: /var/www/html/
          remote_host: ec2-44-210-155-80.compute-1.amazonaws.com
          remote_user: ubuntu
          remote_key: "${{ secrets.SSH_PRIVATE_KEY }}"
